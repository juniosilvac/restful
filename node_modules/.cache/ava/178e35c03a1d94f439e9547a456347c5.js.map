{"version":3,"sources":["users.test.js"],"names":["test","require","connection","errorHandler","create","categories","save","beforeEach","t","query","after","always","list","all","is","length","name","result","category","updated","update","affectedRows","removed","del"],"mappings":";;AAAA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,MAAM,EAAEC,UAAF,EAAcC,YAAd,KAA+BF,QAAQ,SAAR,CAArC;;AAEA,MAAMG,SAAS,MAAMC,WAAWC,IAAX,CAAgB,eAAhB,CAArB;;AAEA,MAAMD,aAAaJ,QAAQ,eAAR,EAAyB,EAACC,UAAD,EAAaC,YAAb,EAAzB,CAAnB;;AAEAH,KAAKO,UAAL,CAAgBC,KAAKN,WAAWO,KAAX,CAAiB,2BAAjB,CAArB;AACAT,KAAKU,KAAL,CAAWC,MAAX,CAAkBH,KAAKN,WAAWO,KAAX,CAAiB,2BAAjB,CAAvB;;AAEAT,KAAK,qBAAL,EAA4B,MAAMQ,CAAN,IAAW;AACrC,QAAMJ,QAAN;AACA,QAAMQ,OAAO,MAAMP,WAAWQ,GAAX,EAAnB;AACAL,IAAEM,EAAF,CAAKF,KAAKP,UAAL,CAAgBU,MAArB,EAA6B,CAA7B;AACAP,IAAEM,EAAF,CAAKF,KAAKP,UAAL,CAAgB,CAAhB,EAAmBW,IAAxB,EAA8B,eAA9B;AACD,CALD;;AAOAhB,KAAK,sBAAL,EAA6B,MAAMQ,CAAN,IAAW;AACtC,QAAMS,SAAS,MAAMb,QAArB;AACAI,IAAEM,EAAF,CAAKG,OAAOC,QAAP,CAAgBF,IAArB,EAA2B,eAA3B;AACD,CAHD;;AAKAhB,KAAK,0BAAL,EAAiC,MAAMQ,CAAN,IAAW;AAC1C,QAAMJ,QAAN;AACA,QAAMe,UAAU,MAAMd,WAAWe,MAAX,CAAkB,CAAlB,EAAqB,eAArB,CAAtB;AACAZ,IAAEM,EAAF,CAAKK,QAAQD,QAAR,CAAiBF,IAAtB,EAA4B,eAA5B;AACAR,IAAEM,EAAF,CAAKK,QAAQE,YAAb,EAA2B,CAA3B;AACD,CALD;;AAOArB,KAAK,sBAAL,EAA6B,MAAMQ,CAAN,IAAW;AACtC,QAAMJ,QAAN;AACA,QAAMkB,UAAU,MAAMjB,WAAWkB,GAAX,CAAe,CAAf,CAAtB;AACAf,IAAEM,EAAF,CAAKQ,QAAQD,YAAb,EAA2B,CAA3B;AACD,CAJD","file":"users.test.js","sourcesContent":["const test = require('ava')\r\nconst { connection, errorHandler } = require('./setup')\r\n\r\nconst create = () => categories.save('category-test')\r\n\r\nconst categories = require('../categories')({connection, errorHandler})\r\n\r\ntest.beforeEach(t => connection.query('truncate table categories'))\r\ntest.after.always(t => connection.query('truncate table categories'))\r\n\r\ntest('Lista de categorias', async t => {\r\n  await create()\r\n  const list = await categories.all()\r\n  t.is(list.categories.length, 1)\r\n  t.is(list.categories[0].name, 'category-test')\r\n})\r\n\r\ntest('Criação de categoria', async t => {\r\n  const result = await create()\r\n  t.is(result.category.name, 'category-test')\r\n})\r\n\r\ntest('Atualização de categoria', async t => {\r\n  await create()\r\n  const updated = await categories.update(1, 'category-test')\r\n  t.is(updated.category.name, 'category-test')\r\n  t.is(updated.affectedRows, 1)\r\n})\r\n\r\ntest('Remoção de categoria', async t => {\r\n  await create()\r\n  const removed = await categories.del(1)\r\n  t.is(removed.affectedRows, 1)\r\n})\r\n"]}