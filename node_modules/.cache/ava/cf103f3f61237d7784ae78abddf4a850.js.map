{"version":3,"sources":["users.test.js"],"names":["test","require","connection","errorHandler","create","users","save","t","list","all","is","length","email","result","user","updated","update","affectedRows","removed","del"],"mappings":";;AAAA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,MAAM,EAAEC,UAAF,EAAcC,YAAd,KAA+BF,QAAQ,SAAR,CAArC;;AAEA,MAAMG,SAAS,MAAMC,MAAMC,IAAN,CAAW,eAAX,EAA4B,QAA5B,CAArB;;AAEA,MAAMD,QAAQJ,QAAQ,UAAR,EAAoB,EAACC,UAAD,EAAaC,YAAb,EAApB,CAAd;;AAEA;AACA;;AAEAH,KAAK,mBAAL,EAA0B,MAAMO,CAAN,IAAW;AACnC,QAAMH,QAAN;AACA,QAAMI,OAAO,MAAMH,MAAMI,GAAN,EAAnB;AACAF,IAAEG,EAAF,CAAKF,KAAKH,KAAL,CAAWM,MAAhB,EAAwB,CAAxB;AACAJ,IAAEG,EAAF,CAAKF,KAAKH,KAAL,CAAW,CAAX,EAAcO,KAAnB,EAA0B,eAA1B;AACD,CALD;;AAOAZ,KAAK,oBAAL,EAA2B,MAAMO,CAAN,IAAW;AACpC,QAAMM,SAAS,MAAMT,QAArB;AACAG,IAAEG,EAAF,CAAKG,OAAOC,IAAP,CAAYF,KAAjB,EAAwB,eAAxB;AACD,CAHD;;AAKAZ,KAAK,wBAAL,EAA+B,MAAMO,CAAN,IAAW;AACxC,QAAMH,QAAN;AACA,QAAMW,UAAU,MAAMV,MAAMW,MAAN,CAAa,CAAb,EAAgB,WAAhB,CAAtB;AACAT,IAAEG,EAAF,CAAKK,QAAQE,YAAb,EAA2B,CAA3B;AACD,CAJD;;AAMAjB,KAAK,oBAAL,EAA2B,MAAMO,CAAN,IAAW;AACpC,QAAMH,QAAN;AACA,QAAMc,UAAU,MAAMb,MAAMc,GAAN,CAAU,CAAV,CAAtB;AACAZ,IAAEG,EAAF,CAAKQ,QAAQD,YAAb,EAA2B,CAA3B;AACD,CAJD","file":"users.test.js","sourcesContent":["const test = require('ava')\r\nconst { connection, errorHandler } = require('./setup')\r\n\r\nconst create = () => users.save('user@test.com', '123456')\r\n\r\nconst users = require('../users')({connection, errorHandler})\r\n\r\n// test.beforeEach(t => connection.query('truncate table users'))\r\n// test.after.always(t => connection.query('truncate table users'))\r\n\r\ntest('Lista de usuários', async t => {\r\n  await create()\r\n  const list = await users.all()\r\n  t.is(list.users.length, 1)\r\n  t.is(list.users[0].email, 'user@test.com')\r\n})\r\n\r\ntest('Criação de usuário', async t => {\r\n  const result = await create()\r\n  t.is(result.user.email, 'user@test.com')\r\n})\r\n\r\ntest('Atualização de usuário', async t => {\r\n  await create()\r\n  const updated = await users.update(1, '123456789')\r\n  t.is(updated.affectedRows, 1)\r\n})\r\n\r\ntest('Remoção de usuário', async t => {\r\n  await create()\r\n  const removed = await users.del(1)\r\n  t.is(removed.affectedRows, 1)\r\n})\r\n"]}