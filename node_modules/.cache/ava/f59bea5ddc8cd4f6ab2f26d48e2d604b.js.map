{"version":3,"sources":["users.test.js"],"names":["test","require","connection","errorHandler","create","users","save","beforeEach","t","query","after","always","list","all","is","length","email","result","user","updated","update","name","affectedRows","removed","del"],"mappings":";;AAAA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,MAAM,EAAEC,UAAF,EAAcC,YAAd,KAA+BF,QAAQ,SAAR,CAArC;;AAEA,MAAMG,SAAS,MAAMC,MAAMC,IAAN,CAAW,eAAX,EAA4B,QAA5B,CAArB;;AAEA,MAAMD,QAAQJ,QAAQ,UAAR,EAAoB,EAACC,UAAD,EAAaC,YAAb,EAApB,CAAd;;AAEAH,KAAKO,UAAL,CAAgBC,KAAKN,WAAWO,KAAX,CAAiB,sBAAjB,CAArB;AACAT,KAAKU,KAAL,CAAWC,MAAX,CAAkBH,KAAKN,WAAWO,KAAX,CAAiB,sBAAjB,CAAvB;;AAEAT,KAAK,qBAAL,EAA4B,MAAMQ,CAAN,IAAW;AACrC,QAAMJ,QAAN;AACA,QAAMQ,OAAO,MAAMP,MAAMQ,GAAN,EAAnB;AACAL,IAAEM,EAAF,CAAKF,KAAKP,KAAL,CAAWU,MAAhB,EAAwB,CAAxB;AACAP,IAAEM,EAAF,CAAKF,KAAKP,KAAL,CAAW,CAAX,EAAcW,KAAnB,EAA0B,eAA1B;AACD,CALD;;AAOAhB,KAAK,sBAAL,EAA6B,MAAMQ,CAAN,IAAW;AACtC,QAAMS,SAAS,MAAMb,QAArB;AACAI,IAAEM,EAAF,CAAKG,OAAOC,IAAP,CAAYF,KAAjB,EAAwB,eAAxB;AACD,CAHD;;AAKAhB,KAAK,0BAAL,EAAiC,MAAMQ,CAAN,IAAW;AAC1C,QAAMJ,QAAN;AACA,QAAMe,UAAU,MAAMd,MAAMe,MAAN,CAAa,CAAb,EAAgB,WAAhB,CAAtB;AACAZ,IAAEM,EAAF,CAAKK,QAAQD,IAAR,CAAaG,IAAlB,EAAwB,WAAxB;AACAb,IAAEM,EAAF,CAAKK,QAAQG,YAAb,EAA2B,CAA3B;AACD,CALD;;AAOAtB,KAAK,sBAAL,EAA6B,MAAMQ,CAAN,IAAW;AACtC,QAAMJ,QAAN;AACA,QAAMmB,UAAU,MAAMlB,MAAMmB,GAAN,CAAU,CAAV,CAAtB;AACAhB,IAAEM,EAAF,CAAKS,QAAQD,YAAb,EAA2B,CAA3B;AACD,CAJD","file":"users.test.js","sourcesContent":["const test = require('ava')\r\nconst { connection, errorHandler } = require('./setup')\r\n\r\nconst create = () => users.save('user@test.com', '123456')\r\n\r\nconst users = require('../users')({connection, errorHandler})\r\n\r\ntest.beforeEach(t => connection.query('truncate table users'))\r\ntest.after.always(t => connection.query('truncate table users'))\r\n\r\ntest('Lista de categorias', async t => {\r\n  await create()\r\n  const list = await users.all()\r\n  t.is(list.users.length, 1)\r\n  t.is(list.users[0].email, 'user@test.com')\r\n})\r\n\r\ntest('Criação de categoria', async t => {\r\n  const result = await create()\r\n  t.is(result.user.email, 'user@test.com')\r\n})\r\n\r\ntest('Atualização de categoria', async t => {\r\n  await create()\r\n  const updated = await users.update(1, 'user-test')\r\n  t.is(updated.user.name, 'user-test')\r\n  t.is(updated.affectedRows, 1)\r\n})\r\n\r\ntest('Remoção de categoria', async t => {\r\n  await create()\r\n  const removed = await users.del(1)\r\n  t.is(removed.affectedRows, 1)\r\n})\r\n"]}